"""add_draft_system_fields

Revision ID: 010b1bf83ef4
Revises: 32aed384cbe2
Create Date: 2025-09-18 10:10:08.570226

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '010b1bf83ef4'
down_revision = '32aed384cbe2'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('langchain_pg_embedding')
    op.drop_table('langchain_pg_collection')
    op.add_column('scenarios', sa.Column('is_draft', sa.Boolean(), nullable=True))
    op.add_column('scenarios', sa.Column('published_version_id', sa.Integer(), nullable=True))
    op.add_column('scenarios', sa.Column('draft_of_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_scenarios_is_draft'), 'scenarios', ['is_draft'], unique=False)
    op.create_foreign_key(None, 'scenarios', 'scenarios', ['draft_of_id'], ['id'])
    op.create_foreign_key(None, 'scenarios', 'scenarios', ['published_version_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'scenarios', type_='foreignkey')
    op.drop_constraint(None, 'scenarios', type_='foreignkey')
    op.drop_index(op.f('ix_scenarios_is_draft'), table_name='scenarios')
    op.drop_column('scenarios', 'draft_of_id')
    op.drop_column('scenarios', 'published_version_id')
    op.drop_column('scenarios', 'is_draft')
    op.create_table('langchain_pg_collection',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('uuid', name='langchain_pg_collection_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('langchain_pg_embedding',
    sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('embedding', pgvector.sqlalchemy.Vector(), autoincrement=False, nullable=True),
    sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name=op.f('langchain_pg_embedding_collection_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', name=op.f('langchain_pg_embedding_pkey'))
    )
    # ### end Alembic commands ###
