from pgvector.sqlalchemy import Vector
from pgvector.sqlalchemy import Vector
from pgvector.sqlalchemy import Vector
"""initial_clean_schema

Revision ID: 7fcfe7937fd1
Revises: 
Create Date: 2025-09-27 20:25:21.781682

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7fcfe7937fd1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cache_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sa.String(), nullable=False),
    sa.Column('cache_type', sa.String(), nullable=False),
    sa.Column('cache_data', sa.JSON(), nullable=False),
    sa.Column('cache_size', sa.Integer(), nullable=True),
    sa.Column('hit_count', sa.Integer(), nullable=True),
    sa.Column('miss_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_expired', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cache_entries_expires_at', 'cache_entries', ['expires_at'], unique=False)
    op.create_index('idx_cache_entries_key', 'cache_entries', ['cache_key'], unique=False)
    op.create_index('idx_cache_entries_last_accessed', 'cache_entries', ['last_accessed'], unique=False)
    op.create_index('idx_cache_entries_type', 'cache_entries', ['cache_type'], unique=False)
    op.create_index(op.f('ix_cache_entries_cache_key'), 'cache_entries', ['cache_key'], unique=True)
    op.create_index(op.f('ix_cache_entries_cache_type'), 'cache_entries', ['cache_type'], unique=False)
    op.create_index(op.f('ix_cache_entries_expires_at'), 'cache_entries', ['expires_at'], unique=False)
    op.create_index(op.f('ix_cache_entries_id'), 'cache_entries', ['id'], unique=False)
    op.create_index(op.f('ix_cache_entries_is_expired'), 'cache_entries', ['is_expired'], unique=False)
    op.create_index(op.f('ix_cache_entries_last_accessed'), 'cache_entries', ['last_accessed'], unique=False)
    op.create_table('email_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('to_email', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('email_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_queue_email_type', 'email_queue', ['email_type'], unique=False)
    op.create_index('idx_email_queue_scheduled_at', 'email_queue', ['scheduled_at'], unique=False)
    op.create_index('idx_email_queue_status', 'email_queue', ['status'], unique=False)
    op.create_index(op.f('ix_email_queue_id'), 'email_queue', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('published_scenarios', sa.Integer(), nullable=True),
    sa.Column('total_simulations', sa.Integer(), nullable=True),
    sa.Column('reputation_score', sa.Float(), nullable=True),
    sa.Column('profile_public', sa.Boolean(), nullable=True),
    sa.Column('allow_contact', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_google_id', 'users', ['google_id'], unique=False)
    op.create_index('idx_users_provider', 'users', ['provider'], unique=False)
    op.create_index('idx_users_role', 'users', ['role'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('vector_embeddings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('content_hash', sa.String(), nullable=False),
    sa.Column('embedding_vector', Vector(dim=1536), nullable=False),
    sa.Column('embedding_model', sa.String(), nullable=False),
    sa.Column('embedding_dimension', sa.Integer(), nullable=False),
    sa.Column('original_content', sa.Text(), nullable=False),
    sa.Column('content_metadata', sa.JSON(), nullable=True),
    sa.Column('similarity_threshold', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_vector_embeddings_active', 'vector_embeddings', ['is_active'], unique=False)
    op.create_index('idx_vector_embeddings_content_hash', 'vector_embeddings', ['content_hash'], unique=False)
    op.create_index('idx_vector_embeddings_content_id', 'vector_embeddings', ['content_id'], unique=False)
    op.create_index('idx_vector_embeddings_content_type', 'vector_embeddings', ['content_type'], unique=False)
    op.create_index('idx_vector_embeddings_created_at', 'vector_embeddings', ['created_at'], unique=False)
    op.create_index(op.f('ix_vector_embeddings_content_hash'), 'vector_embeddings', ['content_hash'], unique=False)
    op.create_index(op.f('ix_vector_embeddings_content_id'), 'vector_embeddings', ['content_id'], unique=False)
    op.create_index(op.f('ix_vector_embeddings_content_type'), 'vector_embeddings', ['content_type'], unique=False)
    op.create_index(op.f('ix_vector_embeddings_id'), 'vector_embeddings', ['id'], unique=False)
    op.create_index(op.f('ix_vector_embeddings_is_active'), 'vector_embeddings', ['is_active'], unique=False)
    op.create_table('cohorts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('course_code', sa.String(), nullable=True),
    sa.Column('semester', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('max_students', sa.Integer(), nullable=True),
    sa.Column('auto_approve', sa.Boolean(), nullable=True),
    sa.Column('allow_self_enrollment', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cohorts_active', 'cohorts', ['is_active'], unique=False)
    op.create_index('idx_cohorts_course_code', 'cohorts', ['course_code'], unique=False)
    op.create_index('idx_cohorts_created_by', 'cohorts', ['created_by'], unique=False)
    op.create_index('idx_cohorts_year', 'cohorts', ['year'], unique=False)
    op.create_index(op.f('ix_cohorts_course_code'), 'cohorts', ['course_code'], unique=False)
    op.create_index(op.f('ix_cohorts_created_by'), 'cohorts', ['created_by'], unique=False)
    op.create_index(op.f('ix_cohorts_id'), 'cohorts', ['id'], unique=False)
    op.create_index(op.f('ix_cohorts_is_active'), 'cohorts', ['is_active'], unique=False)
    op.create_index(op.f('ix_cohorts_title'), 'cohorts', ['title'], unique=False)
    op.create_index(op.f('ix_cohorts_unique_id'), 'cohorts', ['unique_id'], unique=True)
    op.create_index(op.f('ix_cohorts_year'), 'cohorts', ['year'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notifications_created_at', 'notifications', ['created_at'], unique=False)
    op.create_index('idx_notifications_is_read', 'notifications', ['is_read'], unique=False)
    op.create_index('idx_notifications_type', 'notifications', ['type'], unique=False)
    op.create_index('idx_notifications_user_id', 'notifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('challenge', sa.Text(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('learning_objectives', sa.JSON(), nullable=True),
    sa.Column('source_type', sa.String(), nullable=True),
    sa.Column('pdf_content', sa.Text(), nullable=True),
    sa.Column('student_role', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('difficulty_level', sa.String(), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('pdf_title', sa.String(), nullable=True),
    sa.Column('pdf_source', sa.String(), nullable=True),
    sa.Column('processing_version', sa.String(), nullable=True),
    sa.Column('rating_avg', sa.Float(), nullable=True),
    sa.Column('rating_count', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('allow_remixes', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('completion_status', sa.JSON(), nullable=True),
    sa.Column('name_completed', sa.Boolean(), nullable=True),
    sa.Column('description_completed', sa.Boolean(), nullable=True),
    sa.Column('student_role_completed', sa.Boolean(), nullable=True),
    sa.Column('personas_completed', sa.Boolean(), nullable=True),
    sa.Column('scenes_completed', sa.Boolean(), nullable=True),
    sa.Column('images_completed', sa.Boolean(), nullable=True),
    sa.Column('learning_outcomes_completed', sa.Boolean(), nullable=True),
    sa.Column('ai_enhancement_completed', sa.Boolean(), nullable=True),
    sa.Column('is_draft', sa.Boolean(), nullable=True),
    sa.Column('published_version_id', sa.Integer(), nullable=True),
    sa.Column('draft_of_id', sa.Integer(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('clone_count', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.Column('deletion_reason', sa.String(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['draft_of_id'], ['scenarios.id'], ),
    sa.ForeignKeyConstraint(['published_version_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_scenarios_created_at', 'scenarios', ['created_at'], unique=False)
    op.create_index('idx_scenarios_created_by', 'scenarios', ['created_by'], unique=False)
    op.create_index('idx_scenarios_industry', 'scenarios', ['industry'], unique=False)
    op.create_index('idx_scenarios_is_public', 'scenarios', ['is_public'], unique=False)
    op.create_index('idx_scenarios_rating_avg', 'scenarios', ['rating_avg'], unique=False)
    op.create_index('idx_scenarios_title', 'scenarios', ['title'], unique=False)
    op.create_index(op.f('ix_scenarios_deleted_at'), 'scenarios', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_scenarios_id'), 'scenarios', ['id'], unique=False)
    op.create_index(op.f('ix_scenarios_is_draft'), 'scenarios', ['is_draft'], unique=False)
    op.create_index(op.f('ix_scenarios_status'), 'scenarios', ['status'], unique=False)
    op.create_index(op.f('ix_scenarios_title'), 'scenarios', ['title'], unique=False)
    op.create_index(op.f('ix_scenarios_unique_id'), 'scenarios', ['unique_id'], unique=True)
    op.create_table('cohort_invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('student_email', sa.String(length=255), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('invitation_token', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cohort_id'], ['cohorts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['professor_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cohort_invitations_cohort_id', 'cohort_invitations', ['cohort_id'], unique=False)
    op.create_index('idx_cohort_invitations_professor_id', 'cohort_invitations', ['professor_id'], unique=False)
    op.create_index('idx_cohort_invitations_status', 'cohort_invitations', ['status'], unique=False)
    op.create_index('idx_cohort_invitations_student_email', 'cohort_invitations', ['student_email'], unique=False)
    op.create_index('idx_cohort_invitations_token', 'cohort_invitations', ['invitation_token'], unique=False)
    op.create_index(op.f('ix_cohort_invitations_id'), 'cohort_invitations', ['id'], unique=False)
    op.create_index(op.f('ix_cohort_invitations_invitation_token'), 'cohort_invitations', ['invitation_token'], unique=True)
    op.create_table('cohort_simulations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.Column('simulation_id', sa.Integer(), nullable=False),
    sa.Column('assigned_by', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['cohort_id'], ['cohorts.id'], ),
    sa.ForeignKeyConstraint(['simulation_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cohort_simulations_assigned_by', 'cohort_simulations', ['assigned_by'], unique=False)
    op.create_index('idx_cohort_simulations_cohort_id', 'cohort_simulations', ['cohort_id'], unique=False)
    op.create_index('idx_cohort_simulations_due_date', 'cohort_simulations', ['due_date'], unique=False)
    op.create_index('idx_cohort_simulations_simulation_id', 'cohort_simulations', ['simulation_id'], unique=False)
    op.create_index(op.f('ix_cohort_simulations_cohort_id'), 'cohort_simulations', ['cohort_id'], unique=False)
    op.create_index(op.f('ix_cohort_simulations_id'), 'cohort_simulations', ['id'], unique=False)
    op.create_index(op.f('ix_cohort_simulations_simulation_id'), 'cohort_simulations', ['simulation_id'], unique=False)
    op.create_table('cohort_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('enrollment_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['cohort_id'], ['cohorts.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cohort_students_cohort_id', 'cohort_students', ['cohort_id'], unique=False)
    op.create_index('idx_cohort_students_enrollment_date', 'cohort_students', ['enrollment_date'], unique=False)
    op.create_index('idx_cohort_students_status', 'cohort_students', ['status'], unique=False)
    op.create_index('idx_cohort_students_student_id', 'cohort_students', ['student_id'], unique=False)
    op.create_index(op.f('ix_cohort_students_cohort_id'), 'cohort_students', ['cohort_id'], unique=False)
    op.create_index(op.f('ix_cohort_students_id'), 'cohort_students', ['id'], unique=False)
    op.create_index(op.f('ix_cohort_students_student_id'), 'cohort_students', ['student_id'], unique=False)
    op.create_table('professor_student_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=50), nullable=False),
    sa.Column('parent_message_id', sa.Integer(), nullable=True),
    sa.Column('is_reply', sa.Boolean(), nullable=False),
    sa.Column('professor_read', sa.Boolean(), nullable=False),
    sa.Column('student_read', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cohort_id'], ['cohorts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_message_id'], ['professor_student_messages.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['professor_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_professor_student_messages_cohort_id', 'professor_student_messages', ['cohort_id'], unique=False)
    op.create_index('idx_professor_student_messages_created_at', 'professor_student_messages', ['created_at'], unique=False)
    op.create_index('idx_professor_student_messages_parent_id', 'professor_student_messages', ['parent_message_id'], unique=False)
    op.create_index('idx_professor_student_messages_professor_id', 'professor_student_messages', ['professor_id'], unique=False)
    op.create_index('idx_professor_student_messages_student_id', 'professor_student_messages', ['student_id'], unique=False)
    op.create_index('idx_professor_student_messages_type', 'professor_student_messages', ['message_type'], unique=False)
    op.create_index(op.f('ix_professor_student_messages_cohort_id'), 'professor_student_messages', ['cohort_id'], unique=False)
    op.create_index(op.f('ix_professor_student_messages_id'), 'professor_student_messages', ['id'], unique=False)
    op.create_index(op.f('ix_professor_student_messages_professor_id'), 'professor_student_messages', ['professor_id'], unique=False)
    op.create_index(op.f('ix_professor_student_messages_student_id'), 'professor_student_messages', ['student_id'], unique=False)
    op.create_table('scenario_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_type', sa.String(), nullable=True),
    sa.Column('original_content', sa.Text(), nullable=True),
    sa.Column('processed_content', sa.Text(), nullable=True),
    sa.Column('processing_status', sa.String(), nullable=True),
    sa.Column('processing_log', sa.JSON(), nullable=True),
    sa.Column('llamaparse_job_id', sa.String(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scenario_files_id'), 'scenario_files', ['id'], unique=False)
    op.create_table('scenario_personas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('background', sa.Text(), nullable=True),
    sa.Column('correlation', sa.Text(), nullable=True),
    sa.Column('primary_goals', sa.JSON(), nullable=True),
    sa.Column('personality_traits', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scenario_personas_id'), 'scenario_personas', ['id'], unique=False)
    op.create_index(op.f('ix_scenario_personas_name'), 'scenario_personas', ['name'], unique=False)
    op.create_table('scenario_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('review_text', sa.Text(), nullable=True),
    sa.Column('pros', sa.JSON(), nullable=True),
    sa.Column('cons', sa.JSON(), nullable=True),
    sa.Column('use_case', sa.String(), nullable=True),
    sa.Column('helpful_votes', sa.Integer(), nullable=True),
    sa.Column('total_votes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scenario_reviews_id'), 'scenario_reviews', ['id'], unique=False)
    op.create_table('scenario_scenes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('user_goal', sa.Text(), nullable=True),
    sa.Column('scene_order', sa.Integer(), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('timeout_turns', sa.Integer(), nullable=True),
    sa.Column('success_metric', sa.String(), nullable=True),
    sa.Column('max_attempts', sa.Integer(), nullable=True),
    sa.Column('success_threshold', sa.Float(), nullable=True),
    sa.Column('goal_criteria', sa.JSON(), nullable=True),
    sa.Column('hint_triggers', sa.JSON(), nullable=True),
    sa.Column('scene_context', sa.Text(), nullable=True),
    sa.Column('persona_instructions', sa.JSON(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('image_prompt', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scenario_scenes_id'), 'scenario_scenes', ['id'], unique=False)
    op.create_table('scene_personas',
    sa.Column('scene_id', sa.Integer(), nullable=False),
    sa.Column('persona_id', sa.Integer(), nullable=False),
    sa.Column('involvement_level', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['persona_id'], ['scenario_personas.id'], ),
    sa.ForeignKeyConstraint(['scene_id'], ['scenario_scenes.id'], ),
    sa.PrimaryKeyConstraint('scene_id', 'persona_id')
    )
    op.create_table('user_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('current_scene_id', sa.Integer(), nullable=True),
    sa.Column('simulation_status', sa.String(), nullable=True),
    sa.Column('scenes_completed', sa.JSON(), nullable=True),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('forced_progressions', sa.Integer(), nullable=True),
    sa.Column('orchestrator_data', sa.JSON(), nullable=True),
    sa.Column('completion_percentage', sa.Float(), nullable=True),
    sa.Column('total_time_spent', sa.Integer(), nullable=True),
    sa.Column('session_count', sa.Integer(), nullable=True),
    sa.Column('final_score', sa.Float(), nullable=True),
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('archived_reason', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['current_scene_id'], ['scenario_scenes.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_progress_archived_at'), 'user_progress', ['archived_at'], unique=False)
    op.create_index(op.f('ix_user_progress_id'), 'user_progress', ['id'], unique=False)
    op.create_table('agent_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('user_progress_id', sa.Integer(), nullable=False),
    sa.Column('agent_type', sa.String(), nullable=False),
    sa.Column('agent_id', sa.String(), nullable=True),
    sa.Column('session_state', sa.JSON(), nullable=True),
    sa.Column('session_config', sa.JSON(), nullable=True),
    sa.Column('session_metadata', sa.JSON(), nullable=True),
    sa.Column('total_interactions', sa.Integer(), nullable=True),
    sa.Column('total_tokens_used', sa.Integer(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_progress_id'], ['user_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_agent_sessions_active', 'agent_sessions', ['is_active'], unique=False)
    op.create_index('idx_agent_sessions_agent_type', 'agent_sessions', ['agent_type'], unique=False)
    op.create_index('idx_agent_sessions_last_activity', 'agent_sessions', ['last_activity'], unique=False)
    op.create_index('idx_agent_sessions_session_id', 'agent_sessions', ['session_id'], unique=False)
    op.create_index('idx_agent_sessions_user_progress_id', 'agent_sessions', ['user_progress_id'], unique=False)
    op.create_index(op.f('ix_agent_sessions_agent_id'), 'agent_sessions', ['agent_id'], unique=False)
    op.create_index(op.f('ix_agent_sessions_agent_type'), 'agent_sessions', ['agent_type'], unique=False)
    op.create_index(op.f('ix_agent_sessions_expires_at'), 'agent_sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_agent_sessions_id'), 'agent_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_agent_sessions_is_active'), 'agent_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_agent_sessions_last_activity'), 'agent_sessions', ['last_activity'], unique=False)
    op.create_index(op.f('ix_agent_sessions_session_id'), 'agent_sessions', ['session_id'], unique=True)
    op.create_index(op.f('ix_agent_sessions_user_progress_id'), 'agent_sessions', ['user_progress_id'], unique=False)
    op.create_table('conversation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_progress_id', sa.Integer(), nullable=False),
    sa.Column('scene_id', sa.Integer(), nullable=False),
    sa.Column('message_type', sa.String(), nullable=False),
    sa.Column('sender_name', sa.String(), nullable=True),
    sa.Column('persona_id', sa.Integer(), nullable=True),
    sa.Column('message_content', sa.Text(), nullable=False),
    sa.Column('message_order', sa.Integer(), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=True),
    sa.Column('is_hint', sa.Boolean(), nullable=True),
    sa.Column('ai_context_used', sa.JSON(), nullable=True),
    sa.Column('ai_model_version', sa.String(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('user_reaction', sa.String(), nullable=True),
    sa.Column('led_to_progress', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['persona_id'], ['scenario_personas.id'], ),
    sa.ForeignKeyConstraint(['scene_id'], ['scenario_scenes.id'], ),
    sa.ForeignKeyConstraint(['user_progress_id'], ['user_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_logs_id'), 'conversation_logs', ['id'], unique=False)
    op.create_table('conversation_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_progress_id', sa.Integer(), nullable=False),
    sa.Column('scene_id', sa.Integer(), nullable=True),
    sa.Column('summary_type', sa.String(), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=False),
    sa.Column('key_points', sa.JSON(), nullable=True),
    sa.Column('learning_moments', sa.JSON(), nullable=True),
    sa.Column('insights', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('conversation_count', sa.Integer(), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=True),
    sa.Column('summary_metadata', sa.JSON(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['scene_id'], ['scenario_scenes.id'], ),
    sa.ForeignKeyConstraint(['user_progress_id'], ['user_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_conversation_summaries_created_at', 'conversation_summaries', ['created_at'], unique=False)
    op.create_index('idx_conversation_summaries_quality', 'conversation_summaries', ['quality_score'], unique=False)
    op.create_index('idx_conversation_summaries_scene_id', 'conversation_summaries', ['scene_id'], unique=False)
    op.create_index('idx_conversation_summaries_type', 'conversation_summaries', ['summary_type'], unique=False)
    op.create_index('idx_conversation_summaries_user_progress_id', 'conversation_summaries', ['user_progress_id'], unique=False)
    op.create_index(op.f('ix_conversation_summaries_id'), 'conversation_summaries', ['id'], unique=False)
    op.create_index(op.f('ix_conversation_summaries_quality_score'), 'conversation_summaries', ['quality_score'], unique=False)
    op.create_index(op.f('ix_conversation_summaries_scene_id'), 'conversation_summaries', ['scene_id'], unique=False)
    op.create_index(op.f('ix_conversation_summaries_summary_type'), 'conversation_summaries', ['summary_type'], unique=False)
    op.create_index(op.f('ix_conversation_summaries_user_progress_id'), 'conversation_summaries', ['user_progress_id'], unique=False)
    op.create_table('scene_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_progress_id', sa.Integer(), nullable=False),
    sa.Column('scene_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('goal_achieved', sa.Boolean(), nullable=True),
    sa.Column('forced_progression', sa.Boolean(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('messages_sent', sa.Integer(), nullable=True),
    sa.Column('ai_responses', sa.Integer(), nullable=True),
    sa.Column('goal_achievement_score', sa.Float(), nullable=True),
    sa.Column('interaction_quality', sa.Float(), nullable=True),
    sa.Column('scene_feedback', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['scene_id'], ['scenario_scenes.id'], ),
    sa.ForeignKeyConstraint(['user_progress_id'], ['user_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scene_progress_id'), 'scene_progress', ['id'], unique=False)
    op.create_table('session_memory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('user_progress_id', sa.Integer(), nullable=False),
    sa.Column('scene_id', sa.Integer(), nullable=True),
    sa.Column('memory_type', sa.String(), nullable=False),
    sa.Column('memory_content', sa.Text(), nullable=False),
    sa.Column('memory_metadata', sa.JSON(), nullable=True),
    sa.Column('parent_memory_id', sa.Integer(), nullable=True),
    sa.Column('related_persona_id', sa.Integer(), nullable=True),
    sa.Column('importance_score', sa.Float(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parent_memory_id'], ['session_memory.id'], ),
    sa.ForeignKeyConstraint(['related_persona_id'], ['scenario_personas.id'], ),
    sa.ForeignKeyConstraint(['scene_id'], ['scenario_scenes.id'], ),
    sa.ForeignKeyConstraint(['user_progress_id'], ['user_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_session_memory_importance', 'session_memory', ['importance_score'], unique=False)
    op.create_index('idx_session_memory_last_accessed', 'session_memory', ['last_accessed'], unique=False)
    op.create_index('idx_session_memory_scene_id', 'session_memory', ['scene_id'], unique=False)
    op.create_index('idx_session_memory_session_id', 'session_memory', ['session_id'], unique=False)
    op.create_index('idx_session_memory_type', 'session_memory', ['memory_type'], unique=False)
    op.create_index('idx_session_memory_user_progress_id', 'session_memory', ['user_progress_id'], unique=False)
    op.create_index(op.f('ix_session_memory_id'), 'session_memory', ['id'], unique=False)
    op.create_index(op.f('ix_session_memory_importance_score'), 'session_memory', ['importance_score'], unique=False)
    op.create_index(op.f('ix_session_memory_last_accessed'), 'session_memory', ['last_accessed'], unique=False)
    op.create_index(op.f('ix_session_memory_memory_type'), 'session_memory', ['memory_type'], unique=False)
    op.create_index(op.f('ix_session_memory_scene_id'), 'session_memory', ['scene_id'], unique=False)
    op.create_index(op.f('ix_session_memory_session_id'), 'session_memory', ['session_id'], unique=False)
    op.create_index(op.f('ix_session_memory_user_progress_id'), 'session_memory', ['user_progress_id'], unique=False)
    op.create_table('student_simulation_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cohort_assignment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('user_progress_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('graded_by', sa.Integer(), nullable=True),
    sa.Column('graded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completion_percentage', sa.Float(), nullable=True),
    sa.Column('total_time_spent', sa.Integer(), nullable=True),
    sa.Column('attempts_count', sa.Integer(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('is_overdue', sa.Boolean(), nullable=True),
    sa.Column('days_late', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['cohort_assignment_id'], ['cohort_simulations.id'], ),
    sa.ForeignKeyConstraint(['graded_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_progress_id'], ['user_progress.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_student_sim_instances_cohort_assignment', 'student_simulation_instances', ['cohort_assignment_id'], unique=False)
    op.create_index('idx_student_sim_instances_completed_at', 'student_simulation_instances', ['completed_at'], unique=False)
    op.create_index('idx_student_sim_instances_grade', 'student_simulation_instances', ['grade'], unique=False)
    op.create_index('idx_student_sim_instances_status', 'student_simulation_instances', ['status'], unique=False)
    op.create_index('idx_student_sim_instances_student_id', 'student_simulation_instances', ['student_id'], unique=False)
    op.create_index('idx_student_sim_instances_user_progress', 'student_simulation_instances', ['user_progress_id'], unique=False)
    op.create_index(op.f('ix_student_simulation_instances_cohort_assignment_id'), 'student_simulation_instances', ['cohort_assignment_id'], unique=False)
    op.create_index(op.f('ix_student_simulation_instances_id'), 'student_simulation_instances', ['id'], unique=False)
    op.create_index(op.f('ix_student_simulation_instances_student_id'), 'student_simulation_instances', ['student_id'], unique=False)
    op.create_index(op.f('ix_student_simulation_instances_user_progress_id'), 'student_simulation_instances', ['user_progress_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_student_simulation_instances_user_progress_id'), table_name='student_simulation_instances')
    op.drop_index(op.f('ix_student_simulation_instances_student_id'), table_name='student_simulation_instances')
    op.drop_index(op.f('ix_student_simulation_instances_id'), table_name='student_simulation_instances')
    op.drop_index(op.f('ix_student_simulation_instances_cohort_assignment_id'), table_name='student_simulation_instances')
    op.drop_index('idx_student_sim_instances_user_progress', table_name='student_simulation_instances')
    op.drop_index('idx_student_sim_instances_student_id', table_name='student_simulation_instances')
    op.drop_index('idx_student_sim_instances_status', table_name='student_simulation_instances')
    op.drop_index('idx_student_sim_instances_grade', table_name='student_simulation_instances')
    op.drop_index('idx_student_sim_instances_completed_at', table_name='student_simulation_instances')
    op.drop_index('idx_student_sim_instances_cohort_assignment', table_name='student_simulation_instances')
    op.drop_table('student_simulation_instances')
    op.drop_index(op.f('ix_session_memory_user_progress_id'), table_name='session_memory')
    op.drop_index(op.f('ix_session_memory_session_id'), table_name='session_memory')
    op.drop_index(op.f('ix_session_memory_scene_id'), table_name='session_memory')
    op.drop_index(op.f('ix_session_memory_memory_type'), table_name='session_memory')
    op.drop_index(op.f('ix_session_memory_last_accessed'), table_name='session_memory')
    op.drop_index(op.f('ix_session_memory_importance_score'), table_name='session_memory')
    op.drop_index(op.f('ix_session_memory_id'), table_name='session_memory')
    op.drop_index('idx_session_memory_user_progress_id', table_name='session_memory')
    op.drop_index('idx_session_memory_type', table_name='session_memory')
    op.drop_index('idx_session_memory_session_id', table_name='session_memory')
    op.drop_index('idx_session_memory_scene_id', table_name='session_memory')
    op.drop_index('idx_session_memory_last_accessed', table_name='session_memory')
    op.drop_index('idx_session_memory_importance', table_name='session_memory')
    op.drop_table('session_memory')
    op.drop_index(op.f('ix_scene_progress_id'), table_name='scene_progress')
    op.drop_table('scene_progress')
    op.drop_index(op.f('ix_conversation_summaries_user_progress_id'), table_name='conversation_summaries')
    op.drop_index(op.f('ix_conversation_summaries_summary_type'), table_name='conversation_summaries')
    op.drop_index(op.f('ix_conversation_summaries_scene_id'), table_name='conversation_summaries')
    op.drop_index(op.f('ix_conversation_summaries_quality_score'), table_name='conversation_summaries')
    op.drop_index(op.f('ix_conversation_summaries_id'), table_name='conversation_summaries')
    op.drop_index('idx_conversation_summaries_user_progress_id', table_name='conversation_summaries')
    op.drop_index('idx_conversation_summaries_type', table_name='conversation_summaries')
    op.drop_index('idx_conversation_summaries_scene_id', table_name='conversation_summaries')
    op.drop_index('idx_conversation_summaries_quality', table_name='conversation_summaries')
    op.drop_index('idx_conversation_summaries_created_at', table_name='conversation_summaries')
    op.drop_table('conversation_summaries')
    op.drop_index(op.f('ix_conversation_logs_id'), table_name='conversation_logs')
    op.drop_table('conversation_logs')
    op.drop_index(op.f('ix_agent_sessions_user_progress_id'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_session_id'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_last_activity'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_is_active'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_id'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_expires_at'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_agent_type'), table_name='agent_sessions')
    op.drop_index(op.f('ix_agent_sessions_agent_id'), table_name='agent_sessions')
    op.drop_index('idx_agent_sessions_user_progress_id', table_name='agent_sessions')
    op.drop_index('idx_agent_sessions_session_id', table_name='agent_sessions')
    op.drop_index('idx_agent_sessions_last_activity', table_name='agent_sessions')
    op.drop_index('idx_agent_sessions_agent_type', table_name='agent_sessions')
    op.drop_index('idx_agent_sessions_active', table_name='agent_sessions')
    op.drop_table('agent_sessions')
    op.drop_index(op.f('ix_user_progress_id'), table_name='user_progress')
    op.drop_index(op.f('ix_user_progress_archived_at'), table_name='user_progress')
    op.drop_table('user_progress')
    op.drop_table('scene_personas')
    op.drop_index(op.f('ix_scenario_scenes_id'), table_name='scenario_scenes')
    op.drop_table('scenario_scenes')
    op.drop_index(op.f('ix_scenario_reviews_id'), table_name='scenario_reviews')
    op.drop_table('scenario_reviews')
    op.drop_index(op.f('ix_scenario_personas_name'), table_name='scenario_personas')
    op.drop_index(op.f('ix_scenario_personas_id'), table_name='scenario_personas')
    op.drop_table('scenario_personas')
    op.drop_index(op.f('ix_scenario_files_id'), table_name='scenario_files')
    op.drop_table('scenario_files')
    op.drop_index(op.f('ix_professor_student_messages_student_id'), table_name='professor_student_messages')
    op.drop_index(op.f('ix_professor_student_messages_professor_id'), table_name='professor_student_messages')
    op.drop_index(op.f('ix_professor_student_messages_id'), table_name='professor_student_messages')
    op.drop_index(op.f('ix_professor_student_messages_cohort_id'), table_name='professor_student_messages')
    op.drop_index('idx_professor_student_messages_type', table_name='professor_student_messages')
    op.drop_index('idx_professor_student_messages_student_id', table_name='professor_student_messages')
    op.drop_index('idx_professor_student_messages_professor_id', table_name='professor_student_messages')
    op.drop_index('idx_professor_student_messages_parent_id', table_name='professor_student_messages')
    op.drop_index('idx_professor_student_messages_created_at', table_name='professor_student_messages')
    op.drop_index('idx_professor_student_messages_cohort_id', table_name='professor_student_messages')
    op.drop_table('professor_student_messages')
    op.drop_index(op.f('ix_cohort_students_student_id'), table_name='cohort_students')
    op.drop_index(op.f('ix_cohort_students_id'), table_name='cohort_students')
    op.drop_index(op.f('ix_cohort_students_cohort_id'), table_name='cohort_students')
    op.drop_index('idx_cohort_students_student_id', table_name='cohort_students')
    op.drop_index('idx_cohort_students_status', table_name='cohort_students')
    op.drop_index('idx_cohort_students_enrollment_date', table_name='cohort_students')
    op.drop_index('idx_cohort_students_cohort_id', table_name='cohort_students')
    op.drop_table('cohort_students')
    op.drop_index(op.f('ix_cohort_simulations_simulation_id'), table_name='cohort_simulations')
    op.drop_index(op.f('ix_cohort_simulations_id'), table_name='cohort_simulations')
    op.drop_index(op.f('ix_cohort_simulations_cohort_id'), table_name='cohort_simulations')
    op.drop_index('idx_cohort_simulations_simulation_id', table_name='cohort_simulations')
    op.drop_index('idx_cohort_simulations_due_date', table_name='cohort_simulations')
    op.drop_index('idx_cohort_simulations_cohort_id', table_name='cohort_simulations')
    op.drop_index('idx_cohort_simulations_assigned_by', table_name='cohort_simulations')
    op.drop_table('cohort_simulations')
    op.drop_index(op.f('ix_cohort_invitations_invitation_token'), table_name='cohort_invitations')
    op.drop_index(op.f('ix_cohort_invitations_id'), table_name='cohort_invitations')
    op.drop_index('idx_cohort_invitations_token', table_name='cohort_invitations')
    op.drop_index('idx_cohort_invitations_student_email', table_name='cohort_invitations')
    op.drop_index('idx_cohort_invitations_status', table_name='cohort_invitations')
    op.drop_index('idx_cohort_invitations_professor_id', table_name='cohort_invitations')
    op.drop_index('idx_cohort_invitations_cohort_id', table_name='cohort_invitations')
    op.drop_table('cohort_invitations')
    op.drop_index(op.f('ix_scenarios_unique_id'), table_name='scenarios')
    op.drop_index(op.f('ix_scenarios_title'), table_name='scenarios')
    op.drop_index(op.f('ix_scenarios_status'), table_name='scenarios')
    op.drop_index(op.f('ix_scenarios_is_draft'), table_name='scenarios')
    op.drop_index(op.f('ix_scenarios_id'), table_name='scenarios')
    op.drop_index(op.f('ix_scenarios_deleted_at'), table_name='scenarios')
    op.drop_index('idx_scenarios_title', table_name='scenarios')
    op.drop_index('idx_scenarios_rating_avg', table_name='scenarios')
    op.drop_index('idx_scenarios_is_public', table_name='scenarios')
    op.drop_index('idx_scenarios_industry', table_name='scenarios')
    op.drop_index('idx_scenarios_created_by', table_name='scenarios')
    op.drop_index('idx_scenarios_created_at', table_name='scenarios')
    op.drop_table('scenarios')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index('idx_notifications_user_id', table_name='notifications')
    op.drop_index('idx_notifications_type', table_name='notifications')
    op.drop_index('idx_notifications_is_read', table_name='notifications')
    op.drop_index('idx_notifications_created_at', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_cohorts_year'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_unique_id'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_title'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_is_active'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_id'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_created_by'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_course_code'), table_name='cohorts')
    op.drop_index('idx_cohorts_year', table_name='cohorts')
    op.drop_index('idx_cohorts_created_by', table_name='cohorts')
    op.drop_index('idx_cohorts_course_code', table_name='cohorts')
    op.drop_index('idx_cohorts_active', table_name='cohorts')
    op.drop_table('cohorts')
    op.drop_index(op.f('ix_vector_embeddings_is_active'), table_name='vector_embeddings')
    op.drop_index(op.f('ix_vector_embeddings_id'), table_name='vector_embeddings')
    op.drop_index(op.f('ix_vector_embeddings_content_type'), table_name='vector_embeddings')
    op.drop_index(op.f('ix_vector_embeddings_content_id'), table_name='vector_embeddings')
    op.drop_index(op.f('ix_vector_embeddings_content_hash'), table_name='vector_embeddings')
    op.drop_index('idx_vector_embeddings_created_at', table_name='vector_embeddings')
    op.drop_index('idx_vector_embeddings_content_type', table_name='vector_embeddings')
    op.drop_index('idx_vector_embeddings_content_id', table_name='vector_embeddings')
    op.drop_index('idx_vector_embeddings_content_hash', table_name='vector_embeddings')
    op.drop_index('idx_vector_embeddings_active', table_name='vector_embeddings')
    op.drop_table('vector_embeddings')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_role', table_name='users')
    op.drop_index('idx_users_provider', table_name='users')
    op.drop_index('idx_users_google_id', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_email_queue_id'), table_name='email_queue')
    op.drop_index('idx_email_queue_status', table_name='email_queue')
    op.drop_index('idx_email_queue_scheduled_at', table_name='email_queue')
    op.drop_index('idx_email_queue_email_type', table_name='email_queue')
    op.drop_table('email_queue')
    op.drop_index(op.f('ix_cache_entries_last_accessed'), table_name='cache_entries')
    op.drop_index(op.f('ix_cache_entries_is_expired'), table_name='cache_entries')
    op.drop_index(op.f('ix_cache_entries_id'), table_name='cache_entries')
    op.drop_index(op.f('ix_cache_entries_expires_at'), table_name='cache_entries')
    op.drop_index(op.f('ix_cache_entries_cache_type'), table_name='cache_entries')
    op.drop_index(op.f('ix_cache_entries_cache_key'), table_name='cache_entries')
    op.drop_index('idx_cache_entries_type', table_name='cache_entries')
    op.drop_index('idx_cache_entries_last_accessed', table_name='cache_entries')
    op.drop_index('idx_cache_entries_key', table_name='cache_entries')
    op.drop_index('idx_cache_entries_expires_at', table_name='cache_entries')
    op.drop_table('cache_entries')
    # ### end Alembic commands ###
